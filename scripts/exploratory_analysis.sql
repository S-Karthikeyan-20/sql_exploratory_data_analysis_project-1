use DataWarehouse


---Explore all objects in the database

SELECT * FROM INFORMATION_SCHEMA.TABLES

--- Explore all columns in the databse
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'

SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_products'

SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'fact_sales'


-- Explore all countries

SELECT DISTINCT(country) from
gold.dim_customers

--- Explore all categories
SELECT DISTINCT category,product_name,sub_category from
gold.dim_products
order by 1,2,3


--- Find the date of first and last order

SELECT 
MIN(order_date) as first_order_date,
MAX(order_date) as last_order_date,
DATEDIFF(year,MIN(order_date),MAX(order_date)) as order_range_year
from gold.fact_sales

--Find the youngest and oldest birth date
SELECT 
MIN(birth_date) as oldest_birth_date,
DATEDIFF(year,MIN(birth_date),GETDATE()) AS oldest_age,
MAX(birth_date) as youngest_birth_date,
DATEDIFF(year,MAX(birth_date),GETDATE()) AS youngest_age
from gold.dim_customers


--Find the total sales
SELECT SUM(sales_amount) as total_sales
FROM
gold.fact_sales

--Find how many items are sold
SELECT SUM(quantity) as total_items
FROM
gold.fact_sales



--Find the average selling price
SELECT AVG(sales_amount) as average_sales
FROM
gold.fact_sales


--Find the total number of orders
SELECT COUNT(order_number) as total_number_of_orders
FROM
gold.fact_sales

SELECT  COUNT(DISTINCT order_number) as total_number_of_orders
FROM
gold.fact_sales


--Find the total number of products

SELECT COUNT(product_name) as total_products
FROM
gold.dim_products

SELECT COUNT(DISTINCT product_name) as total_products
FROM
gold.dim_products


--Find the total number of customers
SELECT COUNT(customer_key) as total_customers
FROM
gold.dim_customers

--Find the total number of customers that has placed an order 
SELECT COUNT( Distinct customer_key) as total_customers
FROM
gold.fact_sales



--Generate a report that shows all key metrics
SELECT 'Total Sales' as measure_name, SUM(sales_amount) as measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'Average Sales' , AVG(sales_amount) FROM gold.fact_sales
UNION ALL
SELECT  'Total No. Orders', COUNT(DISTINCT order_number)  FROM gold.fact_sales
UNION ALL
SELECT 'Total No. Products', COUNT(DISTINCT product_name) FROM gold.dim_products
UNION All
SELECT 'Total No. Customers', COUNT(customer_key) FROM gold.dim_customers


--Find the total customers by country

SELECT country,count(customer_key) as total_customer 
from 
gold.dim_customers 
group by country 
order by total_customer desc;

--Find the total customers by gender

SELECT gender,count(customer_key) as total_customer 
from 
gold.dim_customers 
group by gender 
order by total_customer desc;

--Find the total products by category
select category,
Count(product_name) as total_products
from gold.dim_products
group by category 
order by total_products desc;

-- What is the average cost in each category
select category,
AVG(cost) as average_cost
from gold.dim_products
group by category 
order by average_cost desc;

-- What is the total revenue generated for each category
select p.category,
sum(f.sales_amount) as total_revenue
from 
gold.fact_sales f
left join gold.dim_products p
on f.product_key = p.product_key
group by p.category
order by total_revenue desc;


-- What is the total revenue generated by each customer
select c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) as total_revenue
from 
gold.fact_sales f
left join gold.dim_customers c
on f.customer_key = c.customer_key
group by c.customer_key,
c.first_name,
c.last_name
order by total_revenue desc;

-- What is the distribution of sold items by each country 
select c.country,
sum(f.quantity) as total_sold_items
from 
gold.fact_sales f
left join gold.dim_customers c
on f.customer_key = c.customer_key
group by c.country 
order by total_sold_items desc;

-- Which 5 products generates the highest revenue?
select top 5 p.product_name ,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f 
left join gold.dim_products p
on p.product_key = f.product_key
group by p.product_name 
order by total_revenue desc

--What are the 5 worst-performing products in terms of sales?
select top 5 p.product_name ,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f 
left join gold.dim_products p
on p.product_key = f.product_key
group by p.product_name 
order by total_revenue;

-- Find the top 10 customers who have generated the highest revenue

select  top 10 c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) as total_revenue
from 
gold.fact_sales f
left join gold.dim_customers c
on f.customer_key = c.customer_key
group by c.customer_key,
c.first_name,
c.last_name
order by total_revenue desc;


-- the 3 customers with the fewest orders

select  top 3 c.customer_key,
c.first_name,
c.last_name,
count(distinct order_number) as total_orders
from 
gold.fact_sales f
left join gold.dim_customers c
on f.customer_key = c.customer_key
group by c.customer_key,
c.first_name,
c.last_name
order by total_orders
;

